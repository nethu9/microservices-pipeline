name: CI/CD Pipeline
on:
  push:
    branches: ["master"]
jobs:
  build-test-analyze:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python3.11 -m pip install --upgrade pip
          python3.11 -m pip install fastapi uvicorn

      - name: Run Unit Tests
        run: echo "No tests yet."

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=nethu9_nethu
            -Dsonar.organization=nethu9
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.projectBaseDir=docker/cart-service

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t nethuy/cart-service:latest docker/cart-service
          docker push nethuy/cart-service:latest

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}"  > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify Kubernetes connection
        run: kubectl cluster-info

      - name: Install Argo Rollouts CLI
        run: |
          curl -sLO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
          chmod +x ./kubectl-argo-rollouts-linux-amd64
          mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts

      - name: Install Argo Rollouts
        run: |
          kubectl create namespace argo-rollouts --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml

      - name: Verify Argo Rollouts Installation
        run: |
          kubectl get deployment -n argo-rollouts

      - name: Install HELM
        uses: azure/setup-helm@v4

      - name: Deploy the HELM Chart
        run: |
          helm upgrade --install cart-service ./helm/chartService --namespace default